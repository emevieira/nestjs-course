generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String

  @@map("users")
}

model Categories {
  categoryId String   @id @default(uuid())
  name       String
  created_at DateTime @default(now())
  Movies     Movies[]
  Series     Series[]

  @@map("categories")
}

model Movies {
  movieId     String   @id @default(uuid())
  name        String
  description String
  releaseYear String
  bannerUrl   String
  imageUrl    String
  trailerLink String
  created_at  DateTime @default(now())

  categoryId String
  category   Categories       @relation(fields: [categoryId], references: [categoryId])
  Download   MovieDownloads[]

  @@map("movies")
}

model Series {
  serieId     String   @id @default(uuid())
  name        String
  description String
  releaseYear String
  bannerUrl   String
  imageUrl    String
  trailerLink String
  created_at  DateTime @default(now())

  categoryId String
  category   Categories @relation(fields: [categoryId], references: [categoryId])
  Seasons    Seasons[]

  @@map("series")
}

model Seasons {
  seasonId     String @id @default(uuid())
  seasonNumber Int

  serie           Series            @relation(fields: [serieId], references: [serieId])
  serieId         String
  seasonDownloads SeasonDownloads[]

  @@map("season")
}

model MovieDownloads {
  movieDownloadId Int    @id @default(autoincrement())
  provedorName    String
  linkDownload    String

  // Relação com a tabela de filmes
  movie   Movies? @relation(fields: [movieId], references: [movieId])
  movieId String?

  @@map("movieDownloads")
}

model SeasonDownloads {
  seasonDownloadId Int    @id @default(autoincrement())
  provedorName     String
  linkDownload     String

  // Relação com a tabela de temporadas
  season   Seasons? @relation(fields: [seasonId], references: [seasonId])
  seasonId String?

  @@map("seasonDownloads")
}
